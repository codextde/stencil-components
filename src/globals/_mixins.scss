
// prefix declarations
@mixin prefixed($property, $value) {
    @if $webkit == true {
      -webkit-#{$property}: #{$value};
    }
  
    @if $moz == true {
      -moz-#{$property}: #{$value};
    }
  
    @if $ms == true {
      -ms-#{$property}: #{$value};
    }
  
    @if $o == true {
      -o-#{$property}: #{$value};
    }
  
    #{$property}: #{$value};
  }
  
  // prefix keyframes
  @mixin keyframes($name) {
    @if $webkit == true {
      @-webkit-keyframes #{$name} {
        @content;
      }
    }
  
    @if $moz == true {
      @-moz-keyframes #{$name} {
        @content;
      }
    }
  
    @if $ms == true {
      @-ms-keyframes #{$name} {
        @content;
      }
    }
  
    @if $o == true {
      @-o-keyframes #{$name} {
        @content;
      }
    }
  
    @keyframes #{$name} {
      @content;
    }
  }

/* Ripple Out */
@include keyframes(#{$nameSpace}-ripple-out) {
	100% {
		top: -(6px + 6px);
		right: -(6px + 6px);
		bottom: -(6px + 6px);
		left: -(6px + 6px);
		opacity: 0;
	}
}

@mixin ripple-out {
	$outerBorderWidth: 6px;
	$innerBorderWidth: 6px;

	@include hacks();
	position: relative;

	&:before {
		content: '';
		position: absolute;
		border: $primaryColor solid $outerBorderWidth;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
		@include prefixed(animation-duration, 1s);
	}

	&:hover:before,
	&:focus:before,
	&:active:before {
		@include prefixed(animation-name, #{$nameSpace}-ripple-out);
	}
}

// As is often the case, some devices/browsers need additional code to get CSS to work
// in the most desired way. These mixins are used to quickly drop in hacks for each element
// Find out more here: https://github.com/IanLunn/Hover/wiki/Hacks-Explained

@mixin hardwareAccel() {
	// Improve performance on mobile/tablet devices
	// Perspective reduces blurryness of text in Chrome
	@include prefixed(transform, perspective(1px) translateZ(0));
}

@mixin improveAntiAlias() {
	// Improve aliasing on mobile/tablet devices
	box-shadow: 0 0 1px rgba(0, 0, 0, 0);
}

@mixin forceBlockLevel() {
	// Transforms need to be block-level to work
	display: inline-block;
	vertical-align: middle;
}

@mixin hacks() {
	@include forceBlockLevel();
	@include hardwareAccel();
	@include improveAntiAlias();
}